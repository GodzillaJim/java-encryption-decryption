type: edu
custom_name: stage4
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends BaseStageTest<String> {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-data", "Welcome to hyperskill!"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-data", "Hello"
                    )
                    .setAttach("Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-data", "012345678",
                        "-mode", "enc"
                    )
                    .setAttach("123456789"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-data", "Hi"
                    )
                    .setAttach("Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-data", "222233334444"
                    )
                    .setAttach("111122223333")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            return new CheckResult(reply.trim().equals(clue.trim()));
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: "package encryptdecrypt;\nimport java.util.Scanner;\npublic class Main {\n\
    \tpublic static void main(String args[]){\n\t\t\n\tScanner scanner = new Scanner(System.in);\n\
    \t\t//System.out.println(\"Please enter the process you want to go through with:\
    \ \");\n\t\tString process = scanner.nextLine();\n\t\t//System.out.println(\"\
    Please enter the message: \");\n\t\tString message = scanner.nextLine();\n\t\t\
    //System.out.println(\"Please enter the key\");\n\t\tint key = scanner.nextInt();\n\
    \t\tString result = \"\";\n\t\t\n\t\t\n\t\tif(process.matches(\"enc\") == true)\
    \ {\n\t\t\tfor(int a=0; a<message.length();a++) {\n\t\t\t\tint code = message.codePointAt(a)\
    \ + key;\n\t\t\t\tchar newChar = (char)code;\n\t\t\t\tresult = result + newChar;\n\
    \t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(result);\n\t\t}else {\n\t\t\tfor(int\
    \ a=0; a<message.length();a++) {\n\t\t\t\tint code = message.codePointAt(a)-key;\n\
    \t\t\t\tchar newChar = (char)code;\n\t\t\t\tresult = result + newChar;\n\t\t\t\
    }\n\t\t\tSystem.out.println(result);\n\t\t}\n\t\t\n\t\tscanner.close();\n\t}\n\
    }\n"
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/248/implement
status: Unchecked
record: -1
